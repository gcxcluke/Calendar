pecked[100]=1
}
for(i in 2:99){
if(x[i-1]=="L" & x[i+1]=="R"){
pecked[i]=0
} else{
pecked[i]=1
}
}
sum(pecked)
x=sample(c("L","R"),100, replace=TRUE, prob=c(.5,.5))
pecked=rep(NA,100)
if(x[100]=="L" & x[2]=="R"){
pecked[1]=0
} else{
pecked[1]=1
}
if(x[99]=="L" & x[1]=="R"){
pecked[100]=0
} else{
pecked[100]=1
}
for(i in 2:99){
if(x[i-1]=="L" & x[i+1]=="R"){
pecked[i]=0
} else{
pecked[i]=1
}
}
sum(pecked)
x=sample(c("L","R"),100, replace=TRUE, prob=c(.5,.5))
pecked=rep(NA,100)
if(x[100]=="L" & x[2]=="R"){
pecked[1]=0
} else{
pecked[1]=1
}
if(x[99]=="L" & x[1]=="R"){
pecked[100]=0
} else{
pecked[100]=1
}
for(i in 2:99){
if(x[i-1]=="L" & x[i+1]=="R"){
pecked[i]=0
} else{
pecked[i]=1
}
}
sum(pecked)
x=sample(c("L","R"),100, replace=TRUE, prob=c(.5,.5))
pecked=rep(NA,100)
if(x[100]=="L" & x[2]=="R"){
pecked[1]=0
} else{
pecked[1]=1
}
if(x[99]=="L" & x[1]=="R"){
pecked[100]=0
} else{
pecked[100]=1
}
for(i in 2:99){
if(x[i-1]=="L" & x[i+1]=="R"){
pecked[i]=0
} else{
pecked[i]=1
}
}
sum(pecked)
x=sample(c("L","R"),100, replace=TRUE, prob=c(.5,.5))
pecked=rep(NA,100)
if(x[100]=="L" & x[2]=="R"){
pecked[1]=0
} else{
pecked[1]=1
}
if(x[99]=="L" & x[1]=="R"){
pecked[100]=0
} else{
pecked[100]=1
}
for(i in 2:99){
if(x[i-1]=="L" & x[i+1]=="R"){
pecked[i]=0
} else{
pecked[i]=1
}
}
sum(pecked)
x=sample(c("L","R"),100, replace=TRUE, prob=c(.5,.5))
pecked=rep(NA,100)
if(x[100]=="L" & x[2]=="R"){
pecked[1]=0
} else{
pecked[1]=1
}
if(x[99]=="L" & x[1]=="R"){
pecked[100]=0
} else{
pecked[100]=1
}
for(i in 2:99){
if(x[i-1]=="L" & x[i+1]=="R"){
pecked[i]=0
} else{
pecked[i]=1
}
}
sum(pecked)
x=sample(c("L","R"),100, replace=TRUE, prob=c(.5,.5))
pecked=rep(NA,100)
if(x[100]=="L" & x[2]=="R"){
pecked[1]=0
} else{
pecked[1]=1
}
if(x[99]=="L" & x[1]=="R"){
pecked[100]=0
} else{
pecked[100]=1
}
for(i in 2:99){
if(x[i-1]=="L" & x[i+1]=="R"){
pecked[i]=0
} else{
pecked[i]=1
}
}
sum(pecked)
x=sample(c("L","R"),100, replace=TRUE, prob=c(.5,.5))
pecked=rep(NA,100)
if(x[100]=="L" & x[2]=="R"){
pecked[1]=0
} else{
pecked[1]=1
}
if(x[99]=="L" & x[1]=="R"){
pecked[100]=0
} else{
pecked[100]=1
}
for(i in 2:99){
if(x[i-1]=="L" & x[i+1]=="R"){
pecked[i]=0
} else{
pecked[i]=1
}
}
sum(pecked)
x=sample(c("L","R"),100, replace=TRUE, prob=c(.5,.5))
pecked=rep(NA,100)
if(x[100]=="L" & x[2]=="R"){
pecked[1]=0
} else{
pecked[1]=1
}
if(x[99]=="L" & x[1]=="R"){
pecked[100]=0
} else{
pecked[100]=1
}
for(i in 2:99){
if(x[i-1]=="L" & x[i+1]=="R"){
pecked[i]=0
} else{
pecked[i]=1
}
}
sum(pecked)
x
x=sample(c("L","R"),100, replace=TRUE, prob=c(.5,.5))
pecked=rep(NA,100)
if(x[100]=="L" & x[2]=="R"){
pecked[1]=0
} else{
pecked[1]=1
}
if(x[99]=="L" & x[1]=="R"){
pecked[100]=0
} else{
pecked[100]=1
}
for(i in 2:99){
if(x[i-1]=="L" & x[i+1]=="R"){
pecked[i]=0
} else{
pecked[i]=1
}
}
sum(pecked)
shiny::runApp('example')
runApp('example')
runApp('example')
runApp('example')
runApp('example')
runApp('example')
runApp('example')
runApp('example')
runApp('example')
runApp('example')
runApp('example')
runApp()
runApp('example')
runApp('example')
runApp('example')
runApp('example')
runApp('example')
runApp('example')
runApp('example')
runApp('example')
require(knitr)
require(mosaic)
require(DT)
require(kableExtra)
library(xtable)
library(readxl)
library(rJava)
library(rJava)
library(xlsx)
??read.xlsx2
data <- read_excel("Schedule.xlsx",
col_types=c('date','text','text','text','text'))
data1 <- read.xlsx2("Schedule.xlsx",1)
print(xtable(data1),type='html',include.rownames=FALSE)
data1
??read.xlsx2
data1 <- read.xlsx2("Schedule.xlsx",sheetIndex=1,
colClasses=c("Date","character","character","character"))
View(data1)
data1[,1]
is.character(data1[,1])
is.date(data1[,1])
is.character(data1[1,1])
is.character("Luke")
data1 <- read.xlsx2("Schedule.xlsx",sheetIndex=1,
colClasses=c("Date","character","character","character"))
print(xtable(data1),type='html',include.rownames=FALSE)
data[,1]
as.date(data[,1])
as.Date(data[,1])
data <- read.xlsx2("Schedule.xlsx",sheetIndex=1,
colClasses=c("Date","character","character","character"))
data[,data[,1]<as.date("09/01/2021)"]
data[,data[,1]<as.date("09/01/2021)")]
data[,data[,1]<as.Date("09/01/2021)")]
data[,1]
data[,1]<as.Date("2021-09-01")
data <- data[,data[,1]<as.Date("2021-09-01")]
data <- read.xlsx2("Schedule.xlsx",sheetIndex=1,
colClasses=c("Date","character","character","character"))
data <- data[,data$Date<as.Date("2021-09-01")]
data <- read.xlsx2("Schedule.xlsx",sheetIndex=1,
colClasses=c("Date","character","character","character"))
data <- data[data$Date<as.Date("2021-09-01"),]
install.packages("xfun")
library(xfun)
install.packages("xfun")
library(tools, lib.loc = "C:/Program Files/R/R-4.0.3/library")
install.packages("xfun")
detach("package:xfun", unload = TRUE)
install.packages("xfun", dependencies=TRUE)
install.packages("xfun", dependencies = TRUE)
install.packages("xfun")
install.packages(c("Rcpp", "rlang"))
install.packages(c("Rcpp", "rlang"))
install.packages(c("Rcpp", "rlang"))
install.packages("xfun")
install.packages(c("Rcpp", "rlang"))
install.packages("Rcpp")
install.packages("Rcpp")
require(knitr)
require(mosaic)
require(DT)
require(kableExtra)
library(xtable)
library(readxl)
library(rJava)
library(xlsx)
install.packages(c("isoband", "Rcpp", "stringi"))
meets <- data[data$Type=="Meet",]
data <- read.xlsx2("Schedule.xlsx",sheetIndex=1,
colClasses=c("Date","character","character","character"))
require(knitr)
require(mosaic)
require(DT)
require(kableExtra)
library(xtable)
library(readxl)
library(rJava)
library(xlsx)
data <- read.xlsx2("Schedule.xlsx",sheetIndex=1,
colClasses=c("Date","character","character","character"))
aug <- data[data$Date<as.Date("2021-09-01"),]
aug[,1]=as.character(aug[,1])
print(xtable(aug),type='html',include.rownames=FALSE)
meets <- data[data$Type=="Meet",]
meets[,1]=as.character(meets[,1])
print(xtable(meets),type='html',include.rownames=FALSE)
meets
meets[1,]
meets[1,3]
meets <- data[data$Type=="Meet",]
meets[,1]=as.character(meets[,1])
meets[1,3]= "<a href="meetInfo2021.html" title="meetInfo">Meet Info</a>"
meets <- data[data$Type=="Meet",]
meets[,1]=as.character(meets[,1])
meets[1,3]= "<a href='meetInfo2021.html' title='meetInfo'>Meet Info</a>"
print(xtable(meets),type='html',include.rownames=FALSE)
meets <- data[data$Type=="Meet",]
meets[,1]=as.character(meets[,1])
meets[1,3]=<a href='meetInfo2021.html'>Meet Info</a>
meets <- data[data$Type=="Meet",]
meets[,1]=as.character(meets[,1])
meets[1,3]=as.html(<a href='meetInfo2021.html'>Meet Info</a>)
meets <- data[data$Type=="Meet",]
meets[,1]=as.character(meets[,1])
meets[1,3]="<a href='meetInfo2021.html'>Meet Info</a>"
print(xtable(meets),type='html',include.rownames=FALSE)
meets <- data[data$Type=="Meet",]
meets[,1]=as.character(meets[,1])
meets[1,3]="<a href='meetInfo2021.html'>Meet Info</a>"
print(xtable(meets),type='html',include.rownames=FALSE)
meets[1,3]
min2sec=function(min,sec=0){
return((min*60)+sec)
}
sec2min=function(sec){
min=floor(sec/60)
sec=sec %% 60
return(sprintf("%02d:%02d", as.integer(min), as.integer(sec)))
}
require(knitr)
require(mosaic)
require(DT)
require(kableExtra)
library(xtable)
library(readxl)
library(rJava)
library(xlsx)
library(googlesheets4)
install.packages("googlesheets4")
library(googlesheets4)
install.packages(c("broom", "cli", "isoband", "jpeg", "pillar", "Rcpp", "readr", "renv", "rvest", "stringi", "tibble", "utf8"))
install.packages("utf8")
install.packages("utf8")
remove.packages("utf8", lib="~/R/win-library/4.0")
install.packages("utf8")
install.packages("utf8")
library(googlesheets4)
library(ggplot2)
min2sec=function(min,sec=0){
return((min*60)+sec)
}
sec2min=function(sec){
min=floor(sec/60)
sec=sec %% 60
return(sprintf("%02d:%02d", as.integer(min), as.integer(sec)))
}
classes <- read_sheet("https://docs.google.com/spreadsheets/d/1DXkfPjWrzR2B6EJhWrfwwTLuP4Jd_nQkOExpdl7aXV4/edit?resourcekey#gid=392298842")
min2sec=function(min,sec=0){
return((min*60)+sec)
}
sec2min=function(sec){
min=floor(sec/60)
sec=sec %% 60
return(sprintf("%02d:%02d", as.integer(min), as.integer(sec)))
}
classes <- read_sheet("https://docs.google.com/spreadsheets/d/1DXkfPjWrzR2B6EJhWrfwwTLuP4Jd_nQkOExpdl7aXV4/edit?resourcekey#gid=392298842")
names(classes)=c("Timestamp","Name", "ClassCode", "ClassName", "MeetingDays", "Start", "End")
schedInd <- function(classes){
classes$Start <- strftime(classes$Start, format="%H:%M", tz="GMT")
classes$End <- strftime(classes$End, format="%H:%M", tz='GMT')
temp <- strsplit(classes$Start,":")
temp2 <- strsplit(classes$End,":")
StartSec <- rep(NA,length(classes$End))
EndSec <- rep(NA,length(classes$End))
for(i in 1:length(classes$End)){
StartSec[i] <- min2sec(as.integer(temp[[i]][1]),as.integer(temp[[i]][2]))
EndSec[i] <- min2sec(as.integer(temp2[[i]][1]),as.integer(temp2[[i]][2]))
}
secs <- min2sec(c(8,9,10,11,12,13,14,15,16,17,18,19,20,21))
classes <- data.frame(classes, StartSec, EndSec)
m <- classes[grepl( "Monday", classes$MeetingDays, fixed = TRUE),]
t <- classes[grepl( "Tuesday", classes$MeetingDays, fixed = TRUE),]
w <- classes[grepl( "Wednesday", classes$MeetingDays, fixed = TRUE),]
r <- classes[grepl( "Thursday", classes$MeetingDays, fixed = TRUE),]
f <- classes[grepl( "Friday", classes$MeetingDays, fixed = TRUE),]
days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
plot <- ggplot() + geom_point() + ggtitle(classes$Name[1]) + theme(plot.title = element_text(hjust = 0.5))
if(length(m[,1])!=0){
plot <- plot + geom_segment(aes(x=m$StartSec,xend=m$EndSec,y=1,yend=1),col="#ff6600",size=30)
for(i in 1:length(m$ClassCode)){
plot <- plot + annotate("text", x=(m$StartSec[i]+18), y=1, label=m$ClassCode[i],size=3)
}
}
if(length(t[,1])!=0){
plot <- plot + geom_segment(aes(x=t$StartSec,xend=t$EndSec,y=2,yend=2),col="#ff6600",size=30)
for(i in 1:length(t$ClassCode)){
plot <- plot + annotate("text", x=(t$StartSec[i]+18), y=2, label=t$ClassCode[i],size=3)
}
}
if(length(w[,1])!=0){
plot <- plot + geom_segment(aes(x=w$StartSec,xend=w$EndSec,y=3,yend=3),col="#ff6600",size=30)
for(i in 1:length(w$ClassCode)){
plot <- plot + annotate("text", x=(w$StartSec[i]+18), y=3, label=w$ClassCode[i],size=3)
}
}
if(length(r[,1])!=0){
plot <- plot + geom_segment(aes(x=r$StartSec,xend=r$EndSec,y=4,yend=4),col="#ff6600",size=30)
for(i in 1:length(r$ClassCode)){
plot <- plot + annotate("text", x=(r$StartSec[i]+18), y=4, label=r$ClassCode[i],size=3)
}
}
if(length(f[,1])!=0){
plot <- plot + geom_segment(aes(x=f$StartSec,xend=f$EndSec,y=5,yend=5),col="#ff6600",size=30)
for(i in 1:length(f$ClassCode)){
plot <- plot + annotate("text", x=(f$StartSec[i]+18), y=5, label=f$ClassCode[i],size=3)
}
}
final <- plot + scale_y_continuous(name="Day", breaks=c(1,2,3,4,5), labels=days) +
scale_x_continuous(name="Time",breaks=secs, limits=c(480,1260),
labels=c("8am","9am","10am","11am","12pm","1pm","2pm","3pm","4pm","5pm","6pm","7pm","8pm","9pm")) +
theme(legend.position = "none")
print(final+coord_flip())
}
indNames <- unique(classes$Name)
for(i in 1:length(indNames)){
print(i)
temp <- classes[classes$Name==indNames[i],]
schedInd(temp)
}
data <- read.xlsx2("20210830.xlsx",sheetIndex=1,colClasses=c("character","POSIXct","POSIXct","POSIXct","POSIXct","POSIXct","POSIXct",
"POSIXct","POSIXct","POSIXct","POSIXct","POSIXct"))
require(knitr)
require(mosaic)
require(DT)
require(kableExtra)
library(xtable)
library(readxl)
library(rJava)
library(xlsx)
library(googlesheets4)
library(ggplot2)
data <- read.xlsx2("20210826.xlsx",sheetIndex=1,colClasses=c("character","POSIXct","character","POSIXct","POSIXct","POSIXct","POSIXct"))
data$Time <- strftime(data$Time, format="%M:%S", tz="GMT")
data$Pace <- strftime(data$Pace, format="%M:%S", tz="GMT")
data$HeatAdj.High <- strftime(data$HeatAdj.High, format="%M:%S", tz="GMT")
data$HeatAdj.Low <- strftime(data$HeatAdj.Low, format="%M:%S", tz="GMT")
data$Goal <- strftime(data$Goal, format="%M:%S", tz="GMT")
data <- read.xlsx2("20210830.xlsx",sheetIndex=1,colClasses=c("character","POSIXct","POSIXct","POSIXct","POSIXct","POSIXct","POSIXct",
"POSIXct","POSIXct","POSIXct","POSIXct","POSIXct"))
data[,2:12]
data[,2:12] <- strftime(data[,2:12], format="%M:%S", tz="GMT")
View(data[,2:12])
data <- read.csv("20210830.xlsx")
print(xtable(data), type = "html",include.rownames=FALSE)
shiny::runApp('C:/Users/gcxcl/Dropbox/ScoreApp')
runApp('C:/Users/gcxcl/Dropbox/ScoreApp/TEST')
runApp('C:/Users/gcxcl/Dropbox/ScoreApp/TEST')
data <- read.xlsx2("meetsplits.xlsx",sheetIndex=1,colClasses=c("character","POSIXct","character","POSIXct","POSIXct","POSIXct"))
data <- read.xlsx2("meetsplits.xlsx",sheetIndex=1,colClasses=c("character","POSIXct","character","POSIXct","POSIXct","POSIXct"))
require(knitr)
require(mosaic)
require(DT)
require(kableExtra)
library(xtable)
library(readxl)
library(rJava)
library(xlsx)
library(googlesheets4)
library(ggplot2)
data <- read.xlsx2("meetsplits.xlsx",sheetIndex=1,colClasses=c("character","POSIXct","character","POSIXct","POSIXct","POSIXct"))
setwd("C:/Users/gcxcl/Dropbox/2021XC/Calendar")
data <- read.xlsx2("meetsplits.xlsx",sheetIndex=1,colClasses=c("character","POSIXct","character","POSIXct","POSIXct","POSIXct"))
View(data)
data <- read.xlsx2("meetsplits.xlsx",sheetIndex=1,colClasses=c("character","POSIXct","character","POSIXct","POSIXct","POSIXct"))
data$One <- strftime(data$Time, format="%M:%S", tz="GMT")
data <- read.xlsx2("meetsplits.xlsx",sheetIndex=1,colClasses=c("character","POSIXct","character","POSIXct","POSIXct","POSIXct"))
data$One <- strftime(data$Time, format="%M:%S", tz="GMT")
data <- read.xlsx2("meetsplits.xlsx",sheetIndex=1,colClasses=c("character","POSIXct","character","POSIXct","POSIXct","POSIXct"))
data$One <- strftime(data$One, format="%M:%S", tz="GMT")
data$Two <- strftime(data$Two, format="%M:%S", tz="GMT")
data <- read.xlsx2("meetsplits.xlsx",sheetIndex=1,colClasses=c("character","POSIXct","character","POSIXct","POSIXct","POSIXct"))
data$One <- strftime(data$One, format="%M:%S", tz="GMT")
data$Two <- strftime(data$Two, format="%M:%S", tz="GMT")
data$One
data$Two
data <- read.xlsx2("meetsplits.xlsx",sheetIndex=1,colClasses=c("character","POSIXct","POSIXct","POSIXct","POSIXct","POSIXct"))
data$One <- strftime(data$One, format="%M:%S", tz="GMT")
data$Two <- strftime(data$Two, format="%M:%S", tz="GMT")
data$Three  <- strftime(data$Three, format="%M:%S", tz="GMT")
data$Four <- strftime(data$Four, format="%M:%S", tz="GMT")
data$Five <- strftime(data$Five, format="%M:%S", tz="GMT")
print(xtable(data), type = "html",include.rownames=FALSE)
require(knitr)
require(mosaic)
require(DT)
require(rvest)
require(xtable)
require(kable)
require(XML2)
install.packages(c("bookdown", "bslib", "cachem", "DT", "haven", "htmltools", "htmlwidgets", "httpuv", "knitr", "later", "openssl", "pkgload", "R6", "readr", "rmarkdown", "stringi", "tibble", "tinytex", "utf8", "vroom", "waldo", "xfun"))
install.packages(c("bookdown", "bslib", "cachem", "DT", "haven", "htmltools", "htmlwidgets", "httpuv", "knitr", "later", "openssl", "pkgload", "R6", "readr", "rmarkdown", "stringi", "tibble", "tinytex", "utf8", "vroom", "waldo", "xfun"))
install.packages(c("bookdown", "bslib", "cachem", "DT", "haven", "htmltools", "htmlwidgets", "httpuv", "knitr", "later", "openssl", "pkgload", "R6", "readr", "rmarkdown", "stringi", "tibble", "tinytex", "utf8", "vroom", "waldo", "xfun"))
install.packages(c("bookdown", "bslib", "cachem", "DT", "haven", "htmltools", "htmlwidgets", "httpuv", "knitr", "later", "openssl", "pkgload", "R6", "readr", "rmarkdown", "stringi", "tibble", "tinytex", "utf8", "vroom", "waldo", "xfun"))
install.packages(c("bookdown", "bslib", "cachem", "DT", "haven", "htmltools", "htmlwidgets", "httpuv", "knitr", "later", "openssl", "pkgload", "R6", "readr", "rmarkdown", "stringi", "tibble", "tinytex", "utf8", "vroom", "waldo", "xfun"))
install.packages(c("bookdown", "bslib", "cachem", "DT", "haven", "htmltools", "htmlwidgets", "httpuv", "knitr", "later", "openssl", "pkgload", "R6", "readr", "rmarkdown", "stringi", "tibble", "tinytex", "utf8", "vroom", "waldo", "xfun"))
install.packages(c("bookdown", "bslib", "cachem", "DT", "haven", "htmltools", "htmlwidgets", "httpuv", "knitr", "later", "openssl", "pkgload", "R6", "readr", "rmarkdown", "stringi", "tibble", "tinytex", "utf8", "vroom", "waldo", "xfun"))
install.packages(c("bookdown", "bslib", "cachem", "DT", "haven", "htmltools", "htmlwidgets", "httpuv", "knitr", "later", "openssl", "pkgload", "R6", "readr", "rmarkdown", "stringi", "tibble", "tinytex", "utf8", "vroom", "waldo", "xfun"))
install.packages(c("bookdown", "bslib", "cachem", "DT", "haven", "htmltools", "htmlwidgets", "httpuv", "knitr", "later", "openssl", "pkgload", "R6", "readr", "rmarkdown", "stringi", "tibble", "tinytex", "utf8", "vroom", "waldo", "xfun"))
install.packages(c("bookdown", "bslib", "cachem", "DT", "haven", "htmltools", "htmlwidgets", "httpuv", "knitr", "later", "openssl", "pkgload", "R6", "readr", "rmarkdown", "stringi", "tibble", "tinytex", "utf8", "vroom", "waldo", "xfun"))
